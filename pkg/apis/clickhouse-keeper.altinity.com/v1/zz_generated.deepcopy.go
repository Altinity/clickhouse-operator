//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	clickhousealtinitycomv1 "github.com/altinity/clickhouse-operator/pkg/apis/clickhouse.altinity.com/v1"
	types "github.com/altinity/clickhouse-operator/pkg/apis/common/types"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkClusterAddress) DeepCopyInto(out *ChkClusterAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkClusterAddress.
func (in *ChkClusterAddress) DeepCopy() *ChkClusterAddress {
	if in == nil {
		return nil
	}
	out := new(ChkClusterAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkClusterLayout) DeepCopyInto(out *ChkClusterLayout) {
	*out = *in
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]*ChkShard, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChkShard)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make([]*ChkReplica, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChkReplica)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.HostsField != nil {
		in, out := &in.HostsField, &out.HostsField
		*out = new(clickhousealtinitycomv1.HostsField)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkClusterLayout.
func (in *ChkClusterLayout) DeepCopy() *ChkClusterLayout {
	if in == nil {
		return nil
	}
	out := new(ChkClusterLayout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkClusterRuntime) DeepCopyInto(out *ChkClusterRuntime) {
	*out = *in
	out.Address = in.Address
	if in.CHK != nil {
		in, out := &in.CHK, &out.CHK
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkClusterRuntime.
func (in *ChkClusterRuntime) DeepCopy() *ChkClusterRuntime {
	if in == nil {
		return nil
	}
	out := new(ChkClusterRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkReplica) DeepCopyInto(out *ChkReplica) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(clickhousealtinitycomv1.TemplatesList)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*clickhousealtinitycomv1.Host, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clickhousealtinitycomv1.Host)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkReplica.
func (in *ChkReplica) DeepCopy() *ChkReplica {
	if in == nil {
		return nil
	}
	out := new(ChkReplica)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkReplicaAddress) DeepCopyInto(out *ChkReplicaAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkReplicaAddress.
func (in *ChkReplicaAddress) DeepCopy() *ChkReplicaAddress {
	if in == nil {
		return nil
	}
	out := new(ChkReplicaAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkReplicaRuntime) DeepCopyInto(out *ChkReplicaRuntime) {
	*out = *in
	out.Address = in.Address
	if in.CHK != nil {
		in, out := &in.CHK, &out.CHK
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkReplicaRuntime.
func (in *ChkReplicaRuntime) DeepCopy() *ChkReplicaRuntime {
	if in == nil {
		return nil
	}
	out := new(ChkReplicaRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkShard) DeepCopyInto(out *ChkShard) {
	*out = *in
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int)
		**out = **in
	}
	if in.InternalReplication != nil {
		in, out := &in.InternalReplication, &out.InternalReplication
		*out = new(types.StringBool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(clickhousealtinitycomv1.TemplatesList)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*clickhousealtinitycomv1.Host, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clickhousealtinitycomv1.Host)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkShard.
func (in *ChkShard) DeepCopy() *ChkShard {
	if in == nil {
		return nil
	}
	out := new(ChkShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkShardAddress) DeepCopyInto(out *ChkShardAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkShardAddress.
func (in *ChkShardAddress) DeepCopy() *ChkShardAddress {
	if in == nil {
		return nil
	}
	out := new(ChkShardAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkShardRuntime) DeepCopyInto(out *ChkShardRuntime) {
	*out = *in
	out.Address = in.Address
	if in.CHK != nil {
		in, out := &in.CHK, &out.CHK
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkShardRuntime.
func (in *ChkShardRuntime) DeepCopy() *ChkShardRuntime {
	if in == nil {
		return nil
	}
	out := new(ChkShardRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChkSpec) DeepCopyInto(out *ChkSpec) {
	*out = *in
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(types.String)
		**out = **in
	}
	if in.NamespaceDomainPattern != nil {
		in, out := &in.NamespaceDomainPattern, &out.NamespaceDomainPattern
		*out = new(types.String)
		**out = **in
	}
	if in.Suspend != nil {
		in, out := &in.Suspend, &out.Suspend
		*out = new(types.StringBool)
		**out = **in
	}
	if in.Reconciling != nil {
		in, out := &in.Reconciling, &out.Reconciling
		*out = new(clickhousealtinitycomv1.Reconciling)
		(*in).DeepCopyInto(*out)
	}
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new(clickhousealtinitycomv1.Defaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(clickhousealtinitycomv1.Templates)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChkSpec.
func (in *ChkSpec) DeepCopy() *ChkSpec {
	if in == nil {
		return nil
	}
	out := new(ChkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseKeeperInstallation) DeepCopyInto(out *ClickHouseKeeperInstallation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(Status)
		(*in).DeepCopyInto(*out)
	}
	if in.runtime != nil {
		in, out := &in.runtime, &out.runtime
		*out = new(ClickHouseKeeperInstallationRuntime)
		(*in).DeepCopyInto(*out)
	}
	out.statusCreatorMutex = in.statusCreatorMutex
	out.runtimeCreatorMutex = in.runtimeCreatorMutex
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseKeeperInstallation.
func (in *ClickHouseKeeperInstallation) DeepCopy() *ClickHouseKeeperInstallation {
	if in == nil {
		return nil
	}
	out := new(ClickHouseKeeperInstallation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseKeeperInstallation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseKeeperInstallationList) DeepCopyInto(out *ClickHouseKeeperInstallationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClickHouseKeeperInstallation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseKeeperInstallationList.
func (in *ClickHouseKeeperInstallationList) DeepCopy() *ClickHouseKeeperInstallationList {
	if in == nil {
		return nil
	}
	out := new(ClickHouseKeeperInstallationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseKeeperInstallationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseKeeperInstallationRuntime) DeepCopyInto(out *ClickHouseKeeperInstallationRuntime) {
	*out = *in
	if in.attributes != nil {
		in, out := &in.attributes, &out.attributes
		*out = new(clickhousealtinitycomv1.ComparableAttributes)
		(*in).DeepCopyInto(*out)
	}
	out.commonConfigMutex = in.commonConfigMutex
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseKeeperInstallationRuntime.
func (in *ClickHouseKeeperInstallationRuntime) DeepCopy() *ClickHouseKeeperInstallationRuntime {
	if in == nil {
		return nil
	}
	out := new(ClickHouseKeeperInstallationRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(clickhousealtinitycomv1.TemplatesList)
		**out = **in
	}
	if in.Layout != nil {
		in, out := &in.Layout, &out.Layout
		*out = new(ChkClusterLayout)
		(*in).DeepCopyInto(*out)
	}
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Configuration) DeepCopyInto(out *Configuration) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(clickhousealtinitycomv1.Settings)
		(*in).DeepCopyInto(*out)
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]*Cluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Cluster)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Configuration.
func (in *Configuration) DeepCopy() *Configuration {
	if in == nil {
		return nil
	}
	out := new(Configuration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FillStatusParams) DeepCopyInto(out *FillStatusParams) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FQDNs != nil {
		in, out := &in.FQDNs, &out.FQDNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NormalizedCR != nil {
		in, out := &in.NormalizedCR, &out.NormalizedCR
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FillStatusParams.
func (in *FillStatusParams) DeepCopy() *FillStatusParams {
	if in == nil {
		return nil
	}
	out := new(FillStatusParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
	if in.TaskIDsStarted != nil {
		in, out := &in.TaskIDsStarted, &out.TaskIDsStarted
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TaskIDsCompleted != nil {
		in, out := &in.TaskIDsCompleted, &out.TaskIDsCompleted
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodIPs != nil {
		in, out := &in.PodIPs, &out.PodIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FQDNs != nil {
		in, out := &in.FQDNs, &out.FQDNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NormalizedCR != nil {
		in, out := &in.NormalizedCR, &out.NormalizedCR
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	if in.NormalizedCRCompleted != nil {
		in, out := &in.NormalizedCRCompleted, &out.NormalizedCRCompleted
		*out = new(ClickHouseKeeperInstallation)
		(*in).DeepCopyInto(*out)
	}
	if in.HostsWithTablesCreated != nil {
		in, out := &in.HostsWithTablesCreated, &out.HostsWithTablesCreated
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.UsedTemplates != nil {
		in, out := &in.UsedTemplates, &out.UsedTemplates
		*out = make([]*clickhousealtinitycomv1.TemplateRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(clickhousealtinitycomv1.TemplateRef)
				**out = **in
			}
		}
	}
	out.mu = in.mu
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}
