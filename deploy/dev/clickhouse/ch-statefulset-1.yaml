# Setup Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: ch-node-hs-1
  labels:
    app: clickhouse
    node: ch-node-1
spec:
  ports:
  - port: 8123
    name: http
  - port: 9000
    name: client
  - port: 9009
    name: interserver
  clusterIP: None
  selector:
    app: clickhouse
    node: ch-node-1
    pod: ch-pod-1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-server-config-d-macros-ch-node-1
  labels:
    app: clickhouse
    node: ch-node-1
data:
  macros.xml: |-
    <yandex>
        <macros>
            <shard>1</shard>
            <replica>1</replica>
            <try>2</try>
        </macros>
    </yandex>
---
# Setup ClickHouse StatefulSet
# Possible params:
# 1. replicas
# 2. memory
# 3. cpu
# 4. storage
# 5. storageClassName
# 6. user to run app
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ch-stateful-set-1
  labels:
    app: clickhouse
    node: ch-node-1
spec:
  selector:
    matchLabels:
      app: clickhouse
      node: ch-node-1
      pod: ch-pod-1
  serviceName: ch-node-hs-1
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: clickhouse
        node: ch-node-1
        pod: ch-pod-1
    spec:
      affinity:
        # Locate only one pod on each host
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - clickhouse
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: clickhouse
        imagePullPolicy: Always
        image: yandex/clickhouse-server
        livenessProbe:
          tcpSocket:
            port: 8123
#           port: 9000
          # Number of seconds after the container has started before liveness or readiness probes are initiated
          initialDelaySeconds: 10
          # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1
          periodSeconds: 10
          # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
          timeoutSeconds: 10
          # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1
          successThreshold: 1
          # When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up
          failureThreshold: 3
        readinessProbe:
          exec:
            # Try 5 times to access both native and http API entry points.
            # In case of failure sleep for i*10 sec and retry
            # This command can take long to to run, so adjust 'timeoutSeconds' accordingly
            command:
            - /bin/bash
            - -c
            - for i in 1 2 3 4 5; do echo "Attempt $i" && echo -n "version=" && clickhouse-client -q 'select version()' && HTTP=$(wget localhost:8123 -q --tries=1 --timeout=5 -O /dev/stdout) && echo "HTTP=$HTTP" && [ $HTTP == 'Ok.' ] && exit 0; echo "Attempt $i FAILED with above output"; sleep $(($i * 10)); done; exit 1
          initialDelaySeconds: 20
          periodSeconds: 60
          # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
          timeoutSeconds: 200
          # When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up
          failureThreshold: 3
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: client
        - containerPort: 9009
          name: interserver
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
        volumeMounts:
        - name: etc-clickhouse-server-config-d-common-volume
          mountPath: /etc/clickhouse-server/config.d
#          mountPath: /etc/clickhouse-server/config.d/remote_servers.xml
#          subPath: remote_servers.xml
#        - name: etc-clickhouse-server-config-d-common-volume
#          mountPath: /etc/clickhouse-server/config.d/zookeeper.xml
#          subPath: zookeeper.xml
        - name: etc-clickhouse-server-config-d-macros-volume
          mountPath: /etc/clickhouse-server/conf.d
#          mountPath: /etc/clickhouse-server/config.d/macros.xml
#          subPath: macros.xml
      volumes:
      - name: etc-clickhouse-server-config-d-common-volume
        configMap:
          name: etc-clickhouse-server-config-d-common
      - name: etc-clickhouse-server-config-d-macros-volume
        configMap:
          name: etc-clickhouse-server-config-d-macros-ch-node-1
