---
# Prometheus scrape_configs
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: prometheus-scraping-config
  labels:
    prometheus: prometheus
stringData:
  prometheus-kubernetes-pods-scraping.yaml: |-
    ### --- KUBE PODS (with prometheus annotations) ---
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      # only for optimization of e2e speed, normal value 30s
      scrape_interval: 10s
      scrape_timeout: 10s
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        regex: true
        action: keep

      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        regex: false
        action: drop

      - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_prometheus_io_port]
        regex: (.+);(.+)
        replacement: $1:$2
        target_label: __address__

      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        regex: ()
        replacement: /metrics
        target_label: __meta_kubernetes_pod_annotation_prometheus_io_path

      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__

      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: container_name

      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)

      - action: labeldrop
        regex: 'container_id|image_id|controller_revision_hash|pod_template_generation|pod_template_hash'

      metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'process_virtual.*|process_max_fds|process_start_time.*|http_.*|go_gc.*'
        action: drop

    ### look to https://github.com/prometheus/prometheus/issues/3756
    - job_name: 'kubernetes-clickhouse-backup-pods'
      kubernetes_sd_configs:
      - role: pod
      # only for e2e test, should 5m for production
      scrape_interval: 5s
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_clickhouse_backup_scrape]
        regex: true
        action: keep

      - source_labels: [__meta_kubernetes_pod_annotation_clickhouse_backup_scrape]
        regex: false
        action: drop

      - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_clickhouse_backup_port]
        regex: (.+);(.+)
        replacement: $1:$2
        target_label: __address__

      - source_labels: [__meta_kubernetes_pod_annotation_clickhouse_backup_path]
        action: replace
        regex: ()
        replacement: /metrics
        target_label: __meta_kubernetes_pod_annotation_clickhouse_backup_path

      - source_labels: [__meta_kubernetes_pod_annotation_clickhouse_backup_path]
        action: replace
        target_label: __metrics_path__

      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: container_name

      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)

      - action: labeldrop
        regex: 'container_id|image_id|controller_revision_hash|pod_template_generation|pod_template_hash'

---
# Setup Prometheus
# Prometheus would be created in kubectl-specified namespace
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  labels:
    prometheus: prometheus
spec:
  replicas: 1
  retention: 1w
  # only for speedup e2e tests
  scrapeInterval: 5s
  evaluationInterval: 5s
  serviceAccountName: prometheus
  # which ServiceMonitors to be used
  serviceMonitorSelector:
    matchLabels:
      app: prometheus
  additionalScrapeConfigs:
    name: prometheus-scraping-config
    key: prometheus-kubernetes-pods-scraping.yaml
  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: prometheus
  enableAdminAPI: false
  alerting:
    alertmanagers:
    - namespace: ${PROMETHEUS_NAMESPACE}
      name: alertmanager
      port: web
---
# Setup ClusterIP Service
# Service would be created in kubectl-specified namespace
# In order to get access outside of k8s it should be exposed as:
# kubectl --namespace prometheus port-forward service/prometheus 9090
# and point browser to localhost:9090
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: prometheus
