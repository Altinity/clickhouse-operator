# Setup CustomResourceDefinition
# CustomResourceDefinition is namespace-less and must have unique name
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clickhouseinstallations.clickhouse.altinity.com
spec:
  group: clickhouse.altinity.com
  version: v1
  scope: Namespaced
  names:
    kind: ClickHouseInstallation
    singular: clickhouseinstallation
    plural: clickhouseinstallations
    shortNames:
    - chi
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          required:
          - configuration
          properties:
            configuration:
              type: object
              required:
              - clusters
              properties:
                clusters:
                  type: array
                  items:
                    type: object
                    required:
                    - name
                    - layout
                    properties:
                      deployment:
                        type: object
                        properties:
                          scenario:
                            enum:
                            - Default
                            - NodeMonopoly
                          volumeClaimTemplate:
                            type: string
                          podTemplate:
                            type: string
                          zone:
                            type: object
                      name:
                        type: string
                      shardsCount:
                        type: integer
                        minimum: 1
                      replicasCount:
                        type: integer
                        minimum: 1
                      layout:
                        type: object
                        required:
                        - type
                        properties:
                          type:
                            enum:
                            - Standard
                            - Advanced
                      shards:
                        type: array
                        items:
                          type: object
                          required:
                          - definitionType
                          properties:
                            deployment:
                              type: object
                              properties:
                                scenario:
                                  enum:
                                  - Default
                                  - NodeMonopoly
                                volumeClaimTemplate:
                                  type: string
                                podTemplate:
                                  type: string
                                zone:
                                  type: object
                            definitionType:
                              enum:
                              - ReplicasCount
                              - Replicas
                            replicasCount:
                              type: integer
                              minimum: 1
                            weight:
                              type: integer
                            internalReplication:
                              enum:
                              - Disabled
                              - Enabled
                            replicas:
                              type: array
                              items:
                                type: object
                                required:
                                - deployment
                                properties:
                                  port:
                                    type: integer
                                    minimum: 1
                                  deployment:
                                    type: object
                                    properties:
                                      scenario:
                                        enum:
                                        - Default
                                        - NodeMonopoly
                                      volumeClaimTemplate:
                                        type: string
                                      podTemplate:
                                        type: string
                                      zone:
                                        type: object
                settings:
                  type: object
                users:
                  type: object
                profiles:
                  type: object
                quotas:
                  type: object
                zookeeper:
                  type: object
                  properties:
                    nodes:
                      type: array
                      items:
                        type: object
                        properties:
                          host:
                            type: string
                          port:
                            type: integer
                            minimum: 1
            defaults:
              type: object
              properties:
                replicasUseFQDN:
                  type: integer
                  minimum: 0
                  maximum: 1
                distributedDDL:
                  type: object
                  properties:
                    profile:
                      type: string
                deployment:
                  type: object
                  properties:
                    scenario:
                      enum:
                      - Default
                      - NodeMonopoly
                    volumeClaimTemplate:
                      type: string
                    podTemplate:
                      type: string
                    zone:
                      type: object
            templates:
              type: object
              properties:
                podTemplates:
                  type: array
                  items:
                    type: object
                    required:
                    - name
                    - containers
                    properies:
                      name:
                        type: string
                      volumes:
                        type: array
                        items:
                          type: object
                      containers:
                        type: array
                        items:
                          type: object
                volumeClaimTemplates:
                  type: array
                  items:
                    type: object
                    required:
                    - name
                    - persistentVolumeClaim
                    properties:
                      name:
                        type: string
                      persistentVolumeClaim:
                        type: object
---
# Setup ServiceAccount
# ServiceAccount would be created in kubectl-specified namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clickhouse-operator
  namespace: ${CHOPERATOR_NAMESPACE}
---
# Setup ClusterRoleBinding between ClusterRole and ServiceAccount.
# ClusterRoleBinding is namespace-less and must have unique name
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clickhouse-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: clickhouse-operator
    namespace: ${CHOPERATOR_NAMESPACE}
---
# Setup Deployment for clickhouse-operator
# Deployment would be created in kubectl-specified namespace
kind: Deployment
apiVersion: apps/v1
metadata:
  name: clickhouse-operator
  namespace: ${CHOPERATOR_NAMESPACE}
  labels:
    app: clickhouse-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse-operator
  template:
    metadata:
      labels:
        app: clickhouse-operator
    spec:
      serviceAccountName: clickhouse-operator
      containers:
        - name: clickhouse-operator
          image: altinity/clickhouse-operator:dev
          env:
            # spec.nodeName: ip-172-20-52-62.ec2.internal
              - name: OPERATOR_POD_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
              # metadata.name: clickhouse-operator-6f87589dbb-ftcsf
              - name: OPERATOR_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              # metadata.namespace: kube-system
              - name: OPERATOR_POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              # status.podIP: 100.96.3.2
              - name: OPERATOR_POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              # spec.serviceAccount: clickhouse-operator
              # spec.serviceAccountName: clickhouse-operator
              - name: OPERATOR_POD_SERVICE_ACCOUNT
                valueFrom:
                  fieldRef:
                    fieldPath: spec.serviceAccountName

              # Container-specific
              - name: OPERATOR_CONTAINER_CPU_REQUEST
                valueFrom:
                  resourceFieldRef:
                    containerName: clickhouse-operator
                    resource: requests.cpu
              - name: OPERATOR_CONTAINER_CPU_LIMIT
                valueFrom:
                  resourceFieldRef:
                    containerName: clickhouse-operator
                    resource: limits.cpu
              - name: OPERATOR_CONTAINER_MEM_REQUEST
                valueFrom:
                  resourceFieldRef:
                    containerName: clickhouse-operator
                    resource: requests.memory
              - name: OPERATOR_CONTAINER_MEM_LIMIT
                valueFrom:
                  resourceFieldRef:
                    containerName: clickhouse-operator
                    resource: limits.memory
---
# Setup ClusterIP Service to provide monitoring metrics for Prometheus
# Service would be created in kubectl-specified namespace
# In order to get access outside of k8s it should be exposed as:
# kubectl --namespace prometheus port-forward service/prometheus 9090
# and point browser to localhost:9090
kind: Service
apiVersion: v1
metadata:
  name: clickhouse-operator-metrics
  namespace: ${CHOPERATOR_NAMESPACE}
  labels:
    app: clickhouse-operator
spec:
  ports:
  - port: 8888
    name: clickhouse-operator-metrics
  selector:
    app: clickhouse-operator
