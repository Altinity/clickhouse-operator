//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CHISelector) DeepCopyInto(out *CHISelector) {
	{
		in := &in
		*out = make(CHISelector, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CHISelector.
func (in CHISelector) DeepCopy() CHISelector {
	if in == nil {
		return nil
	}
	out := new(CHISelector)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CHVersion) DeepCopyInto(out *CHVersion) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CHVersion.
func (in *CHVersion) DeepCopy() *CHVersion {
	if in == nil {
		return nil
	}
	out := new(CHVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiCleanup) DeepCopyInto(out *ChiCleanup) {
	*out = *in
	if in.UnknownObjects != nil {
		in, out := &in.UnknownObjects, &out.UnknownObjects
		*out = new(ChiObjectsCleanup)
		**out = **in
	}
	if in.ReconcileFailedObjects != nil {
		in, out := &in.ReconcileFailedObjects, &out.ReconcileFailedObjects
		*out = new(ChiObjectsCleanup)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiCleanup.
func (in *ChiCleanup) DeepCopy() *ChiCleanup {
	if in == nil {
		return nil
	}
	out := new(ChiCleanup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiClusterAddress) DeepCopyInto(out *ChiClusterAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiClusterAddress.
func (in *ChiClusterAddress) DeepCopy() *ChiClusterAddress {
	if in == nil {
		return nil
	}
	out := new(ChiClusterAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiClusterLayout) DeepCopyInto(out *ChiClusterLayout) {
	*out = *in
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ChiShard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make([]ChiReplica, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostsField != nil {
		in, out := &in.HostsField, &out.HostsField
		*out = new(HostsField)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiClusterLayout.
func (in *ChiClusterLayout) DeepCopy() *ChiClusterLayout {
	if in == nil {
		return nil
	}
	out := new(ChiClusterLayout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiDefaults) DeepCopyInto(out *ChiDefaults) {
	*out = *in
	if in.ReplicasUseFQDN != nil {
		in, out := &in.ReplicasUseFQDN, &out.ReplicasUseFQDN
		*out = new(StringBool)
		**out = **in
	}
	if in.DistributedDDL != nil {
		in, out := &in.DistributedDDL, &out.DistributedDDL
		*out = new(ChiDistributedDDL)
		**out = **in
	}
	if in.StorageManagement != nil {
		in, out := &in.StorageManagement, &out.StorageManagement
		*out = new(StorageManagement)
		**out = **in
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplateNames)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiDefaults.
func (in *ChiDefaults) DeepCopy() *ChiDefaults {
	if in == nil {
		return nil
	}
	out := new(ChiDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiDistributedDDL) DeepCopyInto(out *ChiDistributedDDL) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiDistributedDDL.
func (in *ChiDistributedDDL) DeepCopy() *ChiDistributedDDL {
	if in == nil {
		return nil
	}
	out := new(ChiDistributedDDL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHost) DeepCopyInto(out *ChiHost) {
	*out = *in
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(StringBool)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(StringBool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplateNames)
		**out = **in
	}
	out.Address = in.Address
	out.Config = in.Config
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(CHVersion)
		**out = **in
	}
	if in.reconcileAttributes != nil {
		in, out := &in.reconcileAttributes, &out.reconcileAttributes
		*out = new(ChiHostReconcileAttributes)
		**out = **in
	}
	if in.CurStatefulSet != nil {
		in, out := &in.CurStatefulSet, &out.CurStatefulSet
		*out = new(appsv1.StatefulSet)
		(*in).DeepCopyInto(*out)
	}
	if in.DesiredStatefulSet != nil {
		in, out := &in.DesiredStatefulSet, &out.DesiredStatefulSet
		*out = new(appsv1.StatefulSet)
		(*in).DeepCopyInto(*out)
	}
	if in.CHI != nil {
		in, out := &in.CHI, &out.CHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHost.
func (in *ChiHost) DeepCopy() *ChiHost {
	if in == nil {
		return nil
	}
	out := new(ChiHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHostAddress) DeepCopyInto(out *ChiHostAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHostAddress.
func (in *ChiHostAddress) DeepCopy() *ChiHostAddress {
	if in == nil {
		return nil
	}
	out := new(ChiHostAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHostConfig) DeepCopyInto(out *ChiHostConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHostConfig.
func (in *ChiHostConfig) DeepCopy() *ChiHostConfig {
	if in == nil {
		return nil
	}
	out := new(ChiHostConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHostReconcileAttributes) DeepCopyInto(out *ChiHostReconcileAttributes) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHostReconcileAttributes.
func (in *ChiHostReconcileAttributes) DeepCopy() *ChiHostReconcileAttributes {
	if in == nil {
		return nil
	}
	out := new(ChiHostReconcileAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHostReconcileAttributesCounters) DeepCopyInto(out *ChiHostReconcileAttributesCounters) {
	*out = *in
	if in.status != nil {
		in, out := &in.status, &out.status
		*out = make(map[ObjectStatus]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHostReconcileAttributesCounters.
func (in *ChiHostReconcileAttributesCounters) DeepCopy() *ChiHostReconcileAttributesCounters {
	if in == nil {
		return nil
	}
	out := new(ChiHostReconcileAttributesCounters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiHostTemplate) DeepCopyInto(out *ChiHostTemplate) {
	*out = *in
	if in.PortDistribution != nil {
		in, out := &in.PortDistribution, &out.PortDistribution
		*out = make([]ChiPortDistribution, len(*in))
		copy(*out, *in)
	}
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiHostTemplate.
func (in *ChiHostTemplate) DeepCopy() *ChiHostTemplate {
	if in == nil {
		return nil
	}
	out := new(ChiHostTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiObjectsCleanup) DeepCopyInto(out *ChiObjectsCleanup) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiObjectsCleanup.
func (in *ChiObjectsCleanup) DeepCopy() *ChiObjectsCleanup {
	if in == nil {
		return nil
	}
	out := new(ChiObjectsCleanup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiPodDistribution) DeepCopyInto(out *ChiPodDistribution) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiPodDistribution.
func (in *ChiPodDistribution) DeepCopy() *ChiPodDistribution {
	if in == nil {
		return nil
	}
	out := new(ChiPodDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiPodTemplate) DeepCopyInto(out *ChiPodTemplate) {
	*out = *in
	in.Zone.DeepCopyInto(&out.Zone)
	if in.PodDistribution != nil {
		in, out := &in.PodDistribution, &out.PodDistribution
		*out = make([]ChiPodDistribution, len(*in))
		copy(*out, *in)
	}
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiPodTemplate.
func (in *ChiPodTemplate) DeepCopy() *ChiPodTemplate {
	if in == nil {
		return nil
	}
	out := new(ChiPodTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiPodTemplateZone) DeepCopyInto(out *ChiPodTemplateZone) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiPodTemplateZone.
func (in *ChiPodTemplateZone) DeepCopy() *ChiPodTemplateZone {
	if in == nil {
		return nil
	}
	out := new(ChiPodTemplateZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiPortDistribution) DeepCopyInto(out *ChiPortDistribution) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiPortDistribution.
func (in *ChiPortDistribution) DeepCopy() *ChiPortDistribution {
	if in == nil {
		return nil
	}
	out := new(ChiPortDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiReconciling) DeepCopyInto(out *ChiReconciling) {
	*out = *in
	if in.Cleanup != nil {
		in, out := &in.Cleanup, &out.Cleanup
		*out = new(ChiCleanup)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiReconciling.
func (in *ChiReconciling) DeepCopy() *ChiReconciling {
	if in == nil {
		return nil
	}
	out := new(ChiReconciling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiReplica) DeepCopyInto(out *ChiReplica) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplateNames)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*ChiHost, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChiHost)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	out.Address = in.Address
	if in.CHI != nil {
		in, out := &in.CHI, &out.CHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiReplica.
func (in *ChiReplica) DeepCopy() *ChiReplica {
	if in == nil {
		return nil
	}
	out := new(ChiReplica)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiReplicaAddress) DeepCopyInto(out *ChiReplicaAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiReplicaAddress.
func (in *ChiReplicaAddress) DeepCopy() *ChiReplicaAddress {
	if in == nil {
		return nil
	}
	out := new(ChiReplicaAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiServiceTemplate) DeepCopyInto(out *ChiServiceTemplate) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiServiceTemplate.
func (in *ChiServiceTemplate) DeepCopy() *ChiServiceTemplate {
	if in == nil {
		return nil
	}
	out := new(ChiServiceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiShard) DeepCopyInto(out *ChiShard) {
	*out = *in
	if in.InternalReplication != nil {
		in, out := &in.InternalReplication, &out.InternalReplication
		*out = new(StringBool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplateNames)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*ChiHost, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChiHost)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	out.Address = in.Address
	if in.CHI != nil {
		in, out := &in.CHI, &out.CHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiShard.
func (in *ChiShard) DeepCopy() *ChiShard {
	if in == nil {
		return nil
	}
	out := new(ChiShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiShardAddress) DeepCopyInto(out *ChiShardAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiShardAddress.
func (in *ChiShardAddress) DeepCopy() *ChiShardAddress {
	if in == nil {
		return nil
	}
	out := new(ChiShardAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiSpec) DeepCopyInto(out *ChiSpec) {
	*out = *in
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
	if in.Stop != nil {
		in, out := &in.Stop, &out.Stop
		*out = new(StringBool)
		**out = **in
	}
	if in.Troubleshoot != nil {
		in, out := &in.Troubleshoot, &out.Troubleshoot
		*out = new(StringBool)
		**out = **in
	}
	if in.Templating != nil {
		in, out := &in.Templating, &out.Templating
		*out = new(ChiTemplating)
		(*in).DeepCopyInto(*out)
	}
	if in.Reconciling != nil {
		in, out := &in.Reconciling, &out.Reconciling
		*out = new(ChiReconciling)
		(*in).DeepCopyInto(*out)
	}
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new(ChiDefaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplates)
		(*in).DeepCopyInto(*out)
	}
	if in.UseTemplates != nil {
		in, out := &in.UseTemplates, &out.UseTemplates
		*out = make([]ChiUseTemplate, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiSpec.
func (in *ChiSpec) DeepCopy() *ChiSpec {
	if in == nil {
		return nil
	}
	out := new(ChiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiStatus) DeepCopyInto(out *ChiStatus) {
	*out = *in
	if in.TaskIDsStarted != nil {
		in, out := &in.TaskIDsStarted, &out.TaskIDsStarted
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TaskIDsCompleted != nil {
		in, out := &in.TaskIDsCompleted, &out.TaskIDsCompleted
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodIPs != nil {
		in, out := &in.PodIPs, &out.PodIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FQDNs != nil {
		in, out := &in.FQDNs, &out.FQDNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NormalizedCHI != nil {
		in, out := &in.NormalizedCHI, &out.NormalizedCHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	if in.NormalizedCHICompleted != nil {
		in, out := &in.NormalizedCHICompleted, &out.NormalizedCHICompleted
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	if in.HostsWithTablesCreated != nil {
		in, out := &in.HostsWithTablesCreated, &out.HostsWithTablesCreated
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.UsedTemplates != nil {
		in, out := &in.UsedTemplates, &out.UsedTemplates
		*out = make([]*ChiUseTemplate, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ChiUseTemplate)
				**out = **in
			}
		}
	}
	out.mu = in.mu
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiStatus.
func (in *ChiStatus) DeepCopy() *ChiStatus {
	if in == nil {
		return nil
	}
	out := new(ChiStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiTemplateNames) DeepCopyInto(out *ChiTemplateNames) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiTemplateNames.
func (in *ChiTemplateNames) DeepCopy() *ChiTemplateNames {
	if in == nil {
		return nil
	}
	out := new(ChiTemplateNames)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiTemplates) DeepCopyInto(out *ChiTemplates) {
	*out = *in
	if in.HostTemplates != nil {
		in, out := &in.HostTemplates, &out.HostTemplates
		*out = make([]ChiHostTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodTemplates != nil {
		in, out := &in.PodTemplates, &out.PodTemplates
		*out = make([]ChiPodTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeClaimTemplates != nil {
		in, out := &in.VolumeClaimTemplates, &out.VolumeClaimTemplates
		*out = make([]ChiVolumeClaimTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTemplates != nil {
		in, out := &in.ServiceTemplates, &out.ServiceTemplates
		*out = make([]ChiServiceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostTemplatesIndex != nil {
		in, out := &in.HostTemplatesIndex, &out.HostTemplatesIndex
		*out = new(HostTemplatesIndex)
		(*in).DeepCopyInto(*out)
	}
	if in.PodTemplatesIndex != nil {
		in, out := &in.PodTemplatesIndex, &out.PodTemplatesIndex
		*out = new(PodTemplatesIndex)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeClaimTemplatesIndex != nil {
		in, out := &in.VolumeClaimTemplatesIndex, &out.VolumeClaimTemplatesIndex
		*out = new(VolumeClaimTemplatesIndex)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceTemplatesIndex != nil {
		in, out := &in.ServiceTemplatesIndex, &out.ServiceTemplatesIndex
		*out = new(ServiceTemplatesIndex)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiTemplates.
func (in *ChiTemplates) DeepCopy() *ChiTemplates {
	if in == nil {
		return nil
	}
	out := new(ChiTemplates)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiTemplating) DeepCopyInto(out *ChiTemplating) {
	*out = *in
	if in.CHISelector != nil {
		in, out := &in.CHISelector, &out.CHISelector
		*out = make(CHISelector, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiTemplating.
func (in *ChiTemplating) DeepCopy() *ChiTemplating {
	if in == nil {
		return nil
	}
	out := new(ChiTemplating)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiUseTemplate) DeepCopyInto(out *ChiUseTemplate) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiUseTemplate.
func (in *ChiUseTemplate) DeepCopy() *ChiUseTemplate {
	if in == nil {
		return nil
	}
	out := new(ChiUseTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiVolumeClaimTemplate) DeepCopyInto(out *ChiVolumeClaimTemplate) {
	*out = *in
	out.StorageManagement = in.StorageManagement
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiVolumeClaimTemplate.
func (in *ChiVolumeClaimTemplate) DeepCopy() *ChiVolumeClaimTemplate {
	if in == nil {
		return nil
	}
	out := new(ChiVolumeClaimTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiZookeeperConfig) DeepCopyInto(out *ChiZookeeperConfig) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]ChiZookeeperNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiZookeeperConfig.
func (in *ChiZookeeperConfig) DeepCopy() *ChiZookeeperConfig {
	if in == nil {
		return nil
	}
	out := new(ChiZookeeperConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChiZookeeperNode) DeepCopyInto(out *ChiZookeeperNode) {
	*out = *in
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(StringBool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChiZookeeperNode.
func (in *ChiZookeeperNode) DeepCopy() *ChiZookeeperNode {
	if in == nil {
		return nil
	}
	out := new(ChiZookeeperNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseInstallation) DeepCopyInto(out *ClickHouseInstallation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(ChiStatus)
		(*in).DeepCopyInto(*out)
	}
	in.Attributes.DeepCopyInto(&out.Attributes)
	out.statusMu = in.statusMu
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseInstallation.
func (in *ClickHouseInstallation) DeepCopy() *ClickHouseInstallation {
	if in == nil {
		return nil
	}
	out := new(ClickHouseInstallation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseInstallation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseInstallationList) DeepCopyInto(out *ClickHouseInstallationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClickHouseInstallation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseInstallationList.
func (in *ClickHouseInstallationList) DeepCopy() *ClickHouseInstallationList {
	if in == nil {
		return nil
	}
	out := new(ClickHouseInstallationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseInstallationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseInstallationTemplate) DeepCopyInto(out *ClickHouseInstallationTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(ChiStatus)
		(*in).DeepCopyInto(*out)
	}
	in.Attributes.DeepCopyInto(&out.Attributes)
	out.statusMu = in.statusMu
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseInstallationTemplate.
func (in *ClickHouseInstallationTemplate) DeepCopy() *ClickHouseInstallationTemplate {
	if in == nil {
		return nil
	}
	out := new(ClickHouseInstallationTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseInstallationTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseInstallationTemplateList) DeepCopyInto(out *ClickHouseInstallationTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClickHouseInstallationTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseInstallationTemplateList.
func (in *ClickHouseInstallationTemplateList) DeepCopy() *ClickHouseInstallationTemplateList {
	if in == nil {
		return nil
	}
	out := new(ClickHouseInstallationTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseInstallationTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseOperatorConfiguration) DeepCopyInto(out *ClickHouseOperatorConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseOperatorConfiguration.
func (in *ClickHouseOperatorConfiguration) DeepCopy() *ClickHouseOperatorConfiguration {
	if in == nil {
		return nil
	}
	out := new(ClickHouseOperatorConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseOperatorConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickHouseOperatorConfigurationList) DeepCopyInto(out *ClickHouseOperatorConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClickHouseOperatorConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickHouseOperatorConfigurationList.
func (in *ClickHouseOperatorConfigurationList) DeepCopy() *ClickHouseOperatorConfigurationList {
	if in == nil {
		return nil
	}
	out := new(ClickHouseOperatorConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClickHouseOperatorConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	if in.Zookeeper != nil {
		in, out := &in.Zookeeper, &out.Zookeeper
		*out = new(ChiZookeeperConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = new(ChiTemplateNames)
		**out = **in
	}
	if in.SchemaPolicy != nil {
		in, out := &in.SchemaPolicy, &out.SchemaPolicy
		*out = new(SchemaPolicy)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(StringBool)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(StringBool)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(ClusterSecret)
		(*in).DeepCopyInto(*out)
	}
	if in.Layout != nil {
		in, out := &in.Layout, &out.Layout
		*out = new(ChiClusterLayout)
		(*in).DeepCopyInto(*out)
	}
	out.Address = in.Address
	if in.CHI != nil {
		in, out := &in.CHI, &out.CHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecret) DeepCopyInto(out *ClusterSecret) {
	*out = *in
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(StringBool)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ClusterSecretSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecret.
func (in *ClusterSecret) DeepCopy() *ClusterSecret {
	if in == nil {
		return nil
	}
	out := new(ClusterSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretSource) DeepCopyInto(out *ClusterSecretSource) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(corev1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretSource.
func (in *ClusterSecretSource) DeepCopy() *ClusterSecretSource {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComparableAttributes) DeepCopyInto(out *ComparableAttributes) {
	*out = *in
	if in.ExchangeEnv != nil {
		in, out := &in.ExchangeEnv, &out.ExchangeEnv
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComparableAttributes.
func (in *ComparableAttributes) DeepCopy() *ComparableAttributes {
	if in == nil {
		return nil
	}
	out := new(ComparableAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Configuration) DeepCopyInto(out *Configuration) {
	*out = *in
	if in.Zookeeper != nil {
		in, out := &in.Zookeeper, &out.Zookeeper
		*out = new(ChiZookeeperConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Profiles != nil {
		in, out := &in.Profiles, &out.Profiles
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Quotas != nil {
		in, out := &in.Quotas, &out.Quotas
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(Settings)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]*Setting, len(*in))
			for key, val := range *in {
				var outVal *Setting
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = new(Setting)
					(*in).DeepCopyInto(*out)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]*Cluster, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Cluster)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Configuration.
func (in *Configuration) DeepCopy() *Configuration {
	if in == nil {
		return nil
	}
	out := new(Configuration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyCHIOptions) DeepCopyInto(out *CopyCHIOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyCHIOptions.
func (in *CopyCHIOptions) DeepCopy() *CopyCHIOptions {
	if in == nil {
		return nil
	}
	out := new(CopyCHIOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CopyCHIStatusOptions) DeepCopyInto(out *CopyCHIStatusOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyCHIStatusOptions.
func (in *CopyCHIStatusOptions) DeepCopy() *CopyCHIStatusOptions {
	if in == nil {
		return nil
	}
	out := new(CopyCHIStatusOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CycleAddress) DeepCopyInto(out *CycleAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CycleAddress.
func (in *CycleAddress) DeepCopy() *CycleAddress {
	if in == nil {
		return nil
	}
	out := new(CycleAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CycleSpec) DeepCopyInto(out *CycleSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CycleSpec.
func (in *CycleSpec) DeepCopy() *CycleSpec {
	if in == nil {
		return nil
	}
	out := new(CycleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FillStatusParams) DeepCopyInto(out *FillStatusParams) {
	*out = *in
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FQDNs != nil {
		in, out := &in.FQDNs, &out.FQDNs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NormalizedCHI != nil {
		in, out := &in.NormalizedCHI, &out.NormalizedCHI
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FillStatusParams.
func (in *FillStatusParams) DeepCopy() *FillStatusParams {
	if in == nil {
		return nil
	}
	out := new(FillStatusParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostAddress) DeepCopyInto(out *HostAddress) {
	*out = *in
	if in.CHIScopeAddress != nil {
		in, out := &in.CHIScopeAddress, &out.CHIScopeAddress
		*out = new(ScopeAddress)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterScopeAddress != nil {
		in, out := &in.ClusterScopeAddress, &out.ClusterScopeAddress
		*out = new(ScopeAddress)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostAddress.
func (in *HostAddress) DeepCopy() *HostAddress {
	if in == nil {
		return nil
	}
	out := new(HostAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostTemplatesIndex) DeepCopyInto(out *HostTemplatesIndex) {
	*out = *in
	if in.templates != nil {
		in, out := &in.templates, &out.templates
		*out = make(map[string]*ChiHostTemplate, len(*in))
		for key, val := range *in {
			var outVal *ChiHostTemplate
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(ChiHostTemplate)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostTemplatesIndex.
func (in *HostTemplatesIndex) DeepCopy() *HostTemplatesIndex {
	if in == nil {
		return nil
	}
	out := new(HostTemplatesIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostsField) DeepCopyInto(out *HostsField) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = make([][]*ChiHost, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]*ChiHost, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(ChiHost)
						(*in).DeepCopyInto(*out)
					}
				}
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostsField.
func (in *HostsField) DeepCopy() *HostsField {
	if in == nil {
		return nil
	}
	out := new(HostsField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfig) DeepCopyInto(out *OperatorConfig) {
	*out = *in
	out.Runtime = in.Runtime
	in.Watch.DeepCopyInto(&out.Watch)
	in.ClickHouse.DeepCopyInto(&out.ClickHouse)
	in.Template.DeepCopyInto(&out.Template)
	in.Reconcile.DeepCopyInto(&out.Reconcile)
	in.Annotation.DeepCopyInto(&out.Annotation)
	in.Label.DeepCopyInto(&out.Label)
	out.StatefulSet = in.StatefulSet
	out.Pod = in.Pod
	out.Logger = in.Logger
	if in.WatchNamespaces != nil {
		in, out := &in.WatchNamespaces, &out.WatchNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CHConfigUserDefaultNetworksIP != nil {
		in, out := &in.CHConfigUserDefaultNetworksIP, &out.CHConfigUserDefaultNetworksIP
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeIntoPropagationAnnotations != nil {
		in, out := &in.IncludeIntoPropagationAnnotations, &out.IncludeIntoPropagationAnnotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeFromPropagationAnnotations != nil {
		in, out := &in.ExcludeFromPropagationAnnotations, &out.ExcludeFromPropagationAnnotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeIntoPropagationLabels != nil {
		in, out := &in.IncludeIntoPropagationLabels, &out.IncludeIntoPropagationLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeFromPropagationLabels != nil {
		in, out := &in.ExcludeFromPropagationLabels, &out.ExcludeFromPropagationLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfig.
func (in *OperatorConfig) DeepCopy() *OperatorConfig {
	if in == nil {
		return nil
	}
	out := new(OperatorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigAnnotation) DeepCopyInto(out *OperatorConfigAnnotation) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigAnnotation.
func (in *OperatorConfigAnnotation) DeepCopy() *OperatorConfigAnnotation {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigAnnotation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigCHI) DeepCopyInto(out *OperatorConfigCHI) {
	*out = *in
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigCHI.
func (in *OperatorConfigCHI) DeepCopy() *OperatorConfigCHI {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigCHI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigCHIRuntime) DeepCopyInto(out *OperatorConfigCHIRuntime) {
	*out = *in
	if in.TemplateFiles != nil {
		in, out := &in.TemplateFiles, &out.TemplateFiles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = make([]*ClickHouseInstallation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClickHouseInstallation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(ClickHouseInstallation)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigCHIRuntime.
func (in *OperatorConfigCHIRuntime) DeepCopy() *OperatorConfigCHIRuntime {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigCHIRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigClickHouse) DeepCopyInto(out *OperatorConfigClickHouse) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	in.ConfigRestartPolicy.DeepCopyInto(&out.ConfigRestartPolicy)
	out.Access = in.Access
	out.Metrics = in.Metrics
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigClickHouse.
func (in *OperatorConfigClickHouse) DeepCopy() *OperatorConfigClickHouse {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigClickHouse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigConfig) DeepCopyInto(out *OperatorConfigConfig) {
	*out = *in
	in.File.DeepCopyInto(&out.File)
	in.User.DeepCopyInto(&out.User)
	out.Network = in.Network
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigConfig.
func (in *OperatorConfigConfig) DeepCopy() *OperatorConfigConfig {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigDefault) DeepCopyInto(out *OperatorConfigDefault) {
	*out = *in
	if in.NetworksIP != nil {
		in, out := &in.NetworksIP, &out.NetworksIP
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigDefault.
func (in *OperatorConfigDefault) DeepCopy() *OperatorConfigDefault {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigDefault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigFile) DeepCopyInto(out *OperatorConfigFile) {
	*out = *in
	out.Path = in.Path
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigFile.
func (in *OperatorConfigFile) DeepCopy() *OperatorConfigFile {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigFileRuntime) DeepCopyInto(out *OperatorConfigFileRuntime) {
	*out = *in
	if in.CommonConfigFiles != nil {
		in, out := &in.CommonConfigFiles, &out.CommonConfigFiles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.HostConfigFiles != nil {
		in, out := &in.HostConfigFiles, &out.HostConfigFiles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UsersConfigFiles != nil {
		in, out := &in.UsersConfigFiles, &out.UsersConfigFiles
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigFileRuntime.
func (in *OperatorConfigFileRuntime) DeepCopy() *OperatorConfigFileRuntime {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigFileRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigLabel) DeepCopyInto(out *OperatorConfigLabel) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Runtime = in.Runtime
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigLabel.
func (in *OperatorConfigLabel) DeepCopy() *OperatorConfigLabel {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigReconcile) DeepCopyInto(out *OperatorConfigReconcile) {
	*out = *in
	out.Runtime = in.Runtime
	out.StatefulSet = in.StatefulSet
	in.Host.DeepCopyInto(&out.Host)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigReconcile.
func (in *OperatorConfigReconcile) DeepCopy() *OperatorConfigReconcile {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigReconcile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigReconcileHost) DeepCopyInto(out *OperatorConfigReconcileHost) {
	*out = *in
	in.Wait.DeepCopyInto(&out.Wait)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigReconcileHost.
func (in *OperatorConfigReconcileHost) DeepCopy() *OperatorConfigReconcileHost {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigReconcileHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigReconcileHostWait) DeepCopyInto(out *OperatorConfigReconcileHostWait) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(StringBool)
		**out = **in
	}
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = new(StringBool)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(StringBool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigReconcileHostWait.
func (in *OperatorConfigReconcileHostWait) DeepCopy() *OperatorConfigReconcileHostWait {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigReconcileHostWait)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigRestartPolicy) DeepCopyInto(out *OperatorConfigRestartPolicy) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]OperatorConfigRestartPolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigRestartPolicy.
func (in *OperatorConfigRestartPolicy) DeepCopy() *OperatorConfigRestartPolicy {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigRestartPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigRestartPolicyRule) DeepCopyInto(out *OperatorConfigRestartPolicyRule) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]OperatorConfigRestartPolicyRuleSet, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(OperatorConfigRestartPolicyRuleSet, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigRestartPolicyRule.
func (in *OperatorConfigRestartPolicyRule) DeepCopy() *OperatorConfigRestartPolicyRule {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigRestartPolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in OperatorConfigRestartPolicyRuleSet) DeepCopyInto(out *OperatorConfigRestartPolicyRuleSet) {
	{
		in := &in
		*out = make(OperatorConfigRestartPolicyRuleSet, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigRestartPolicyRuleSet.
func (in OperatorConfigRestartPolicyRuleSet) DeepCopy() OperatorConfigRestartPolicyRuleSet {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigRestartPolicyRuleSet)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigTemplate) DeepCopyInto(out *OperatorConfigTemplate) {
	*out = *in
	in.CHI.DeepCopyInto(&out.CHI)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigTemplate.
func (in *OperatorConfigTemplate) DeepCopy() *OperatorConfigTemplate {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigUser) DeepCopyInto(out *OperatorConfigUser) {
	*out = *in
	in.Default.DeepCopyInto(&out.Default)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigUser.
func (in *OperatorConfigUser) DeepCopy() *OperatorConfigUser {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorConfigWatch) DeepCopyInto(out *OperatorConfigWatch) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorConfigWatch.
func (in *OperatorConfigWatch) DeepCopy() *OperatorConfigWatch {
	if in == nil {
		return nil
	}
	out := new(OperatorConfigWatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodTemplatesIndex) DeepCopyInto(out *PodTemplatesIndex) {
	*out = *in
	if in.templates != nil {
		in, out := &in.templates, &out.templates
		*out = make(map[string]*ChiPodTemplate, len(*in))
		for key, val := range *in {
			var outVal *ChiPodTemplate
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(ChiPodTemplate)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodTemplatesIndex.
func (in *PodTemplatesIndex) DeepCopy() *PodTemplatesIndex {
	if in == nil {
		return nil
	}
	out := new(PodTemplatesIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaPolicy) DeepCopyInto(out *SchemaPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaPolicy.
func (in *SchemaPolicy) DeepCopy() *SchemaPolicy {
	if in == nil {
		return nil
	}
	out := new(SchemaPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopeAddress) DeepCopyInto(out *ScopeAddress) {
	*out = *in
	if in.CycleSpec != nil {
		in, out := &in.CycleSpec, &out.CycleSpec
		*out = new(CycleSpec)
		**out = **in
	}
	if in.CycleAddress != nil {
		in, out := &in.CycleAddress, &out.CycleAddress
		*out = new(CycleAddress)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopeAddress.
func (in *ScopeAddress) DeepCopy() *ScopeAddress {
	if in == nil {
		return nil
	}
	out := new(ScopeAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTemplatesIndex) DeepCopyInto(out *ServiceTemplatesIndex) {
	*out = *in
	if in.templates != nil {
		in, out := &in.templates, &out.templates
		*out = make(map[string]*ChiServiceTemplate, len(*in))
		for key, val := range *in {
			var outVal *ChiServiceTemplate
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(ChiServiceTemplate)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTemplatesIndex.
func (in *ServiceTemplatesIndex) DeepCopy() *ServiceTemplatesIndex {
	if in == nil {
		return nil
	}
	out := new(ServiceTemplatesIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Setting) DeepCopyInto(out *Setting) {
	*out = *in
	if in.vector != nil {
		in, out := &in.vector, &out.vector
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.attributes != nil {
		in, out := &in.attributes, &out.attributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Setting.
func (in *Setting) DeepCopy() *Setting {
	if in == nil {
		return nil
	}
	out := new(Setting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Settings) DeepCopyInto(out *Settings) {
	{
		in := &in
		*out = make(Settings, len(*in))
		for key, val := range *in {
			var outVal *Setting
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Setting)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Settings.
func (in Settings) DeepCopy() Settings {
	if in == nil {
		return nil
	}
	out := new(Settings)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageManagement) DeepCopyInto(out *StorageManagement) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageManagement.
func (in *StorageManagement) DeepCopy() *StorageManagement {
	if in == nil {
		return nil
	}
	out := new(StorageManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeClaimTemplatesIndex) DeepCopyInto(out *VolumeClaimTemplatesIndex) {
	*out = *in
	if in.templates != nil {
		in, out := &in.templates, &out.templates
		*out = make(map[string]*ChiVolumeClaimTemplate, len(*in))
		for key, val := range *in {
			var outVal *ChiVolumeClaimTemplate
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(ChiVolumeClaimTemplate)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeClaimTemplatesIndex.
func (in *VolumeClaimTemplatesIndex) DeepCopy() *VolumeClaimTemplatesIndex {
	if in == nil {
		return nil
	}
	out := new(VolumeClaimTemplatesIndex)
	in.DeepCopyInto(out)
	return out
}
