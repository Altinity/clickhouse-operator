#
# AWS-specific labels, applicable in 'nodeAffinity' statements
#
# beta.kubernetes.io/arch=amd64
# beta.kubernetes.io/instance-type=t2.medium
# beta.kubernetes.io/os=linux
#
# failure-domain.beta.kubernetes.io/region=us-east-1
# failure-domain.beta.kubernetes.io/zone=us-east-1a
#
# kubernetes.io/hostname=ip-172-20-37-97.ec2.internal
# kubernetes.io/role=node
# node-role.kubernetes.io/node=
#
# kops.k8s.io/instancegroup=nodes2
#
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "ch-per-host-pvc"
spec:
  defaults:
    templates:
      podTemplate: clickhouse-per-host
      serviceTemplate: ch-service
  configuration:
    clusters:
      - name: zoned
        layout:
          shardsCount: 2
  templates:
    serviceTemplates:
      - name: ch-service
        generateName: chendpoint-{chi}
        metadata:
          labels:
            custom.label: "custom.value"
          annotations:
            cloud.google.com/load-balancer-type: "Internal"
            service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
            service.beta.kubernetes.io/azure-load-balancer-internal: "true"
            service.beta.kubernetes.io/openstack-internal-load-balancer: "true"
            service.beta.kubernetes.io/cce-load-balancer-internal-vpc: "true"
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: LoadBalancer
    podTemplates:
      # Specify Pod Templates with affinity
      - name: clickhouse-per-host
        zone:
          key: "clickhouse"
          values:
            - "allow"
        podDistribution:
          - type: "ShardAntiAffinity"
          - type: "ClickHouseInstallationAffinity"
          - type: "ClusterAffinity"
        spec:
          affinity:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        a: b
                      matchExpressions:
                        - key: security
                          operator: In
                          values:
                            - S2
                    topologyKey: "kubernetes.io/hostname"
          containers:
            - name: clickhouse-pod
              image: yandex/clickhouse-server:20.7
              volumeMounts:
                - name: storage-vc-template
                  mountPath: /var/lib/clickhouse
    volumeClaimTemplates:
      - name: storage-vc-template
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
